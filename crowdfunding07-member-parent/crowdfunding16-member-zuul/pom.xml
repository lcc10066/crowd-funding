<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>crowdfunding07-member-parent</artifactId>
        <groupId>org.crowdfunding</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>crowdfunding16-member-zuul</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>
        <dependency>
            <groupId>org.crowdfunding</groupId>
            <artifactId>crowdfunding05-common-util</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>


        <!-- 引入 springboot&redis 整合场景 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- 引入 springboot&springsession 整合场景 -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>


<!--    zuul的filter在访问拦截时，需要从spring-session（基于Redis）获取已经序列化的对象（反序列化），需要使用相应的VO实体类

        因为存储在Redis中的信息包含类的名称，不引入该实体类，会报反序列化异常
    -->
        <dependency>
            <groupId>org.crowdfunding</groupId>
            <artifactId>crowdfunding09-member-entity</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

    </dependencies>
</project>